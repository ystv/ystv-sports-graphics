name: End-to-End Tests

on:
  pull_request:
  push:
    branches: [main]

jobs:
  cypress:
    strategy:
      matrix:
        component: [bundle, scores]

    runs-on: ubuntu-latest
    steps:
      - name: Checkout NodeCG
        uses: actions/checkout@v3
        with:
          repository: ystv/nodecg
          ref: ystv
          path: ./nodecg

      - name: Checkout
        uses: actions/checkout@v3
        with:
          path: ./nodecg/bundles/ystv-sports-graphics

      - name: Start database
        working-directory: ./nodecg/bundles/ystv-sports-graphics
        run: |
          docker volume create cbdata
          docker run --rm -d -p 8091-8096:8091-8096 -p 11207-11211:11207-11211 -p 18091-18096:18096-18096 -v cbdata:/cbdata -v $(pwd)/scripts/couchbase-entrypoint.sh:/entrypoint.sh:ro couchbase/server:community-7.1.1
          docker run --rm -d -p 6379:6379 redis:6-alpine

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        working-directory: ./nodecg/bundles/ystv-sports-graphics
        run: echo "::set-output name=dir::$(yarn config get cacheFolder)"

      - uses: actions/cache@v3
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock,**/package.json') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install Dependencies
        run: yarn --immutable --inline-builds
        working-directory: ./nodecg/bundles/ystv-sports-graphics

      - name: Build app
        working-directory: ./nodecg/bundles/ystv-sports-graphics/scores-src
        run: |
          yarn build
          mkdir -p build/Release/
          cp ../node_modules/couchbase/build/Release/couchbase_impl.node build/Release/couchbase_impl.node

      - name: Run App
        working-directory: ./nodecg/bundles/ystv-sports-graphics/scores-src
        env:
          NODE_ENV: test
          DB_CONNECTION_STRING: couchbase://localhost
          REDIS_CONNECTION_STRING: redis://localhost
        run: yarn prod | tee scores-app.log 2>&1 &

      - name: Build bundle
        if: matrix.component == 'bundle'
        working-directory: ./nodecg/bundles/ystv-sports-graphics/bundle-src
        run: yarn bundle:build

      - name: Install NodeCG dependencies
        if: matrix.component == 'bundle'
        working-directory: ./nodecg
        run: npm ci

      - name: Run NodeCG
        if: matrix.component == 'bundle'
        working-directory: ./nodecg
        env:
          NODE_ENV: test
        run: |
          mkdir -p cfg
          echo '{"scoresService": { "apiURL": "http://localhost:3000/api", "username": "admin", "password": "password", "publicAttachmentsURLBase": "http://localhost:3000/api/attachments" }}' > cfg/ystv-sports-graphics.json
          node ./index.js &

      - name: Run Cypress
        uses: cypress-io/github-action@v5
        with:
          browser: chrome
          record: true
          spec: ${{ matrix.component }}-src/**
          working-directory: ./nodecg/bundles/ystv-sports-graphics
        env:
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload videos of failures
        if: ${{ failure() }}
        uses: actions/upload-artifact@v3
        with:
          name: E2E test video
          path: ./nodecg/bundles/ystv-sports-graphics/cypress/videos

      - name: Upload logs
        if: ${{ failure() }}
        uses: actions/upload-artifact@v3
        with:
          name: Server logs
          path: ./nodecg/bundles/ystv-sports-graphics/scores-src/scores-app.log
